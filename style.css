* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

body {
    background-color: rgb(195, 162, 248);
    font-family: monospace;
}

.container {
    display: flex; /* Esto habilita las propiedades de Flexbox */
    flex-direction: row; /* Esta propiedad es la propiedad por default. */
    /* flex-direction: column; */
    background-color: snow;
}

/* 
    Propiedades de Flexbox
     Flex-basis -> Tama침o del main-size del elemento. Es como un 'como un width' ancho base del elemento.

        Cuando flex-direction; row | row reverse -> flex-basis= ancho
        Cuando flex-direction; coum | colum-reverse -> flex-basis= alto

     Flex-Basis es relativa al espacio disponible del contenedor. Si no hay espacio suficiente los elementos no creceran m치s all치.

     Si tengo Flex-basis declarado el width/height no funciona.

    
    */

        

.item{
    flex-basis: 100px;
    width: 200px;
    height: 500px;
    background-color: mediumpurple;
    text-align: center;
    font-size: 25px;
    font-weight: bold;
    border: 1px solid black;
}

/* El Inline-flex se ajusta al ancho de los items

El flex; se ajusta al espacio disponible*/

/* Vamos a usar pseudoclases para seleccionar los items individualmente. */

/* Reto

1.Cada item debe tener un tama침o de fuente distinto.

2.Cada item debe tener un padding top distinto

3. Cada item debe tener un alto distinto. Que no exceda el alto del contenedor*/

/* .item:nth-child(1) {
    background-color: lightblue;
    padding-top: 100px;
    font-size: 2rem;
    height: 200px;
} */

/* .item:nth-child(2) {
    background-color: lightsalmon;
    padding-top: 302px;
    font-size: 30px;
    height: 344px;
} */

/* .item:nth-child(3) {
    background-color: lightgreen;
    padding-top: 44px;
    font-size: 80px;
    height: 444px;
} */

/* .item:nth-child(4) {
    background-color: lightpink;
    padding-top: 50px;
    font-size: 2rem;
    height: 100px;
} */