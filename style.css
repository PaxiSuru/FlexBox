* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

body {
    background-color: violet;
    font-family: monospace;
}

.container {
    height: 500px; 
    background-color: snow;
    display: flex;
    width: 350px;
    /* flex-wrap: nowrap; /* Este es el valor por default. Los items se ajustan al ancho del contenedor.*/ 
    flex-wrap: wrap; /* Esto permite tener multiples lineas, si los items no caben en el contenedor, dará un salto de línea. */
    /* align-content: normal; */ /* valor por default */
    /* align-content: flex-start;  /* Ajusta las lineas al inicio del eje transversal */
    /* align-content: flex-end; */ /* Ajusta las lineas al final del eje transversal */
    /*align-content: center; */ /* Ajusta las lineas al centro del eje transversal */
    /*align-content: space-around; /* Distrubuye el espacio alrededor de cada linea */
    /*align-content: space-evenly; */ /* Distribuye el espacio proporcionalmente entre lineas y el contenedor. */
    /* align-content: stretch;  *//* Estiran el alto de los items sobre el eje transversal. Los items no deben tener un alto definido. */
    /*align-content: space-between; /* Distribuye el espacio proporcionalmente entre cada linea. Sin considerar el contenedor */

    align-content: space-evenly;
    justify-content: space-between;
    align-content: space-between;



    
    /* align-items: flex-start Alinea hacia arriba */
    /*align-items: flex-end; Alinea hacia abajo*/
    /*align-items: center; Alinea en el centro*/
    /*     align-items: stretch; Crece en la altura los elementos en espacio disponible. Los utems no deben tener alto definido.*/
    /*align-items: baseline; Alinea los items en funcion de la linea base del texto que contienen. Independientemente del tamaño del texto, ubicacion del contenido y altura del item.
    */
    /* align-items: center;
    flex-direction: row-reverse;
    justify-content: center; */
    

    /*display: inline-flex;
    display: flex;
    /*flex-direction: row; /*No ocurre nada por que es el mismo valor. valor por default. Izq a Der*/
    /*flex-direction: row-reverse; /* La dirección de nuestro flexbox esta invertida. Der a Izq*/
    /*flex-direction: column; /* Se apilan en una sola columna. Solo se voltea el eje. Abajo hacia arriba. */
    /*flex-direction: column-reverse; /* Las hace colocarse de arriba a abajo. Arriba hacia abajo.*/

    /*justify-content: start; /* Alinea a la izquier-Der */
    /*justify-content: end; /* Alinea a la Derc-Izq */
    /*justify-content: center; /*  Alinea al centro*/
    /*justify-content: space-around; /* Asigna espacio alrededor de cada elemento */
    /*justify-content: space-between; /* Distribuye asignando un espacio proporcional */
    /*justify-content: space-evenly; /* Espacio proporcional entre  */
}

.item{
    background-color: mediumpurple;
    width: 100px;
    height: 100px;
    text-align: center;
    font-size: 25px;
    font-weight: bold;
    padding-top: 32px;
    border: 1px solid black;
}

/* El Inline-flex se ajusta al ancho de los items

El flex; se ajusta al espacio disponible*/

/* Vamos a usar pseudoclases para seleccionar los items individualmente. */

/* Reto

1.Cada item debe tener un tamaño de fuente distinto.

2.Cada item debe tener un padding top distinto

3. Cada item debe tener un alto distinto. Que no exceda el alto del contenedor*/

/* .item:nth-child(1) {
    background-color: lightblue;
    padding-top: 100px;
    font-size: 2rem;
    height: 200px;
} */

/* .item:nth-child(2) {
    background-color: lightsalmon;
    padding-top: 302px;
    font-size: 30px;
    height: 344px;
} */

/* .item:nth-child(3) {
    background-color: lightgreen;
    padding-top: 44px;
    font-size: 80px;
    height: 444px;
} */

/* .item:nth-child(4) {
    background-color: lightpink;
    padding-top: 50px;
    font-size: 2rem;
    height: 100px;
} */